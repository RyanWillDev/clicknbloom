@import url("https://fonts.googleapis.com/css?family=Dancing+Script:400,700|Arizonia");
html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

/*! normalize.css v1.0.1 | MIT License | git.io/normalize */
article, aside, details, figcaption, figure, footer, header, hgroup, nav, section, summary {
  display: block; }

audio, canvas, video {
  display: inline-block;
  *display: inline;
  *zoom: 1; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden] {
  display: none; }

html {
  font-size: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

html, button, input, select, textarea {
  font-family: sans-serif; }

body {
  margin: 0; }

a:focus {
  outline: thin dotted; }

a:active, a:hover {
  outline: 0; }

h1 {
  font-size: 2em;
  margin: .67em 0; }

h2 {
  font-size: 1.5em;
  margin: .83em 0; }

h3 {
  font-size: 1.17em;
  margin: 1em 0; }

h4 {
  font-size: 1em;
  margin: 1.33em 0; }

h5 {
  font-size: .83em;
  margin: 1.67em 0; }

h6 {
  font-size: .75em;
  margin: 2.33em 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b, strong {
  font-weight: bold; }

blockquote {
  margin: 1em 40px; }

dfn {
  font-style: italic; }

mark {
  background: #ff0;
  color: #000; }

p, pre {
  margin: 1em 0; }

code, kbd, pre, samp {
  font-family: monospace,serif;
  _font-family: 'courier new',monospace;
  font-size: 1em; }

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word; }

q {
  quotes: none; }

q:before, q:after {
  content: '';
  content: none; }

small {
  font-size: 80%; }

sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

dl, menu, ol, ul {
  margin: 1em 0; }

dd {
  margin: 0 0 0 40px; }

menu, ol, ul {
  padding: 0 0 0 40px; }

nav ul, nav ol {
  list-style: none;
  list-style-image: none; }

img {
  border: 0;
  -ms-interpolation-mode: bicubic; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 0; }

form {
  margin: 0; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: .35em .625em .75em; }

legend {
  border: 0;
  padding: 0;
  white-space: normal;
  *margin-left: -7px; }

button, input, select, textarea {
  font-size: 100%;
  margin: 0;
  vertical-align: baseline;
  *vertical-align: middle; }

button, input {
  line-height: normal; }

button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
  *overflow: visible; }

button[disabled], input[disabled] {
  cursor: default; }

input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
  *height: 13px;
  *width: 13px; }

input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  box-sizing: content-box; }

input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto;
  vertical-align: top; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/* Fonts 
====================*/
/* Global Styles 
============================= */
body {
  color: #333333;
  font-family: "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif; }

a {
  text-decoration: none; }

/* Navigation Styles 
============================= */
nav {
  max-width: 90%;
  margin-left: auto;
  margin-right: auto;
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 100%;
  margin-top: 1em; }

nav::after {
  clear: both;
  content: "";
  display: table; }

nav::after {
  clear: both;
  content: "";
  display: table; }

nav:last-child {
  margin-right: 0; }

#nav__logo {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 40.29137%;
  margin-left: 8.5298%; }

#nav__logo:last-child {
  margin-right: 0; }

@media (max-width: 640px) {
  #nav__logo {
    float: left;
    display: block;
    margin-right: 2.35765%;
    width: 23.23176%; }
  #nav__logo:last-child {
    margin-right: 0; } }

.nav__link {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 14.70196%;
  text-align: right; }

.nav__link:last-child {
  margin-right: 0; }

.nav__link a {
  border-bottom: 1px solid transparent;
  color: #333333;
  font-family: "Arizonia", "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  font-size: 1.75em;
  font-weight: bold;
  padding: 5px; }

.nav__link a:hover, .nav__link a.active {
  border-color: black;
  color: black; }

@media (max-width: 640px) {
  .nav__link {
    float: left;
    display: block;
    margin-right: 2.35765%;
    width: 23.23176%;
    margin-left: 8.5298%;
    font-size: 0.75em; }
  .nav__link:last-child {
    margin-right: 0; }
  .nav__link.desk-only {
    display: none; } }

/* Homepage Styles 
============================= */
.main {
  background-image: url(img/home-image.jpg);
  background-image: url(img/home-image.jpg);
  background-repeat: no-repeat;
  background-size: cover;
  height: 100vh;
  padding-top: 5px;
  -webkit-filter: sepia(50%) brightness(80%) contrast(70%);
  filter: sepia(50%) brightness(80%) contrast(70%); }

@media (min-width: 770px) {
  .main {
    background-position: 0 -275px; } }

.main__content {
  max-width: 90%;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
  margin-top: 9.375em; }

.main__content::after {
  clear: both;
  content: "";
  display: table; }

.main__content h1 {
  font-family: "Dancing Script", "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  margin-bottom: 16px; }

@media (min-width: 640px) {
  .main__content h1 {
    font-size: 7.5em; } }

.main__content h2 {
  font-family: "Dancing Script", "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  margin-top: 16px; }

@media (min-width: 640px) {
  .main__content h2 {
    font-size: 3.125em; } }

@media (min-width: 640px) {
  .main__content {
    margin-top: 16.875em; } }

/*# sourceMappingURL=data:application/json;base64, */
